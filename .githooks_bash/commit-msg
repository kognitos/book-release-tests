#!/usr/bin/env python

import sys
import subprocess

# 1. Read STDIN (Format: "from_commit to_commit branch_name")
#(old, new, branch) = sys.stdin.read().split()

# # 2. Only deploy if master branch was pushed
# if branch == 'refs/heads/master':
#     subprocess.call('date >> ~/prod-deployment.log', shell=True)
#     subprocess.call('GIT_WORK_TREE=/home/ft/app.prod git checkout master -f', shell=True)
#     subprocess.call('cd ../../app.prod;bower update', shell=True)

# #3. Only deploy if develop branch was pushed
# if branch == 'refs/heads/develop':
#     subprocess.call('date >> ~/dev-deployment.log', shell=True)
#     subprocess.call('GIT_WORK_TREE=/home/ft/app.dev git checkout develop -f', shell=True)
#     subprocess.call('cd ../../app.dev;bower update', shell=True)

with open("output.txt", "a") as f:
    f.write("----------------------------------------------------\n")
    # f.write(f"branch: {branch}\n")
    # f.write(f"old: {old}\n")
    # f.write(f"new: {new}\n")
    f.write(f"data: {sys.argv}\n")
    f.write("----------------------------------------------------\n")

#raise Exception("Prevent commits for testing purposes")