name: "Terraform Deploy"

inputs:
  MAJOR_VERSION:
    required: true
    type: string
  MINOR_VERSION:
    required: true
    type: string
  PATCH_VERSION:
    required: true
    type: string
  PROJECT_NAME:
    required: true
    type: string
  BOOK_NAME:
    required: true
    type: string
  DOCKER_REGISTRY:
    required: true
    type: string
  CHECK_BEFORE_APPLY:
    type: bool
    default: true

env:
  SEMVER: "${{ inputs.MAJOR_VERSION }}.${{ inputs.MINOR_VERSION }}.${{ inputs.PATCH_VERSION }}"
  BOOK_LAMBDA_SEMVER: "${{ inputs.MAJOR_VERSION }}_${{ inputs.MINOR_VERSION }}_${{ inputs.PATCH_VERSION }}"
  IMAGE_URI: "${{ inputs.DOCKER_REGISTRY }}/${{ inputs.PROJECT_NAME }}/book/${{ inputs.BOOK_NAME }}/${{ env.SEMVER }}"

openweather/openweather_3.1.2.tfstate
runs:
  using: "composite"
  steps:
    - uses: hashicorp/setup-terraform@v3

    - shell: bash
      run: terraform -chdir=./working_directories/initial_configuration init -backend-config="bucket=terraform-${{ env.BOOK_LAMBDA_SEMVER }}-backend"
    - shell: bash
      run: terraform -chdir=./working_directories/book_lambda init -backend-config="key=${{ env.BOOK_LAMBDA_SEMVER }}.book_lambda.tfstate"

    - if: inputs.CHECK_BEFORE_APPLY
      shell: bash
      run: terraform -chdir=./working_directories/initial_configuration validate -var book_name=${{ inputs.BOOK_NAME }}
    - if: inputs.CHECK_BEFORE_APPLY
      shell: bash
      run: terraform -chdir=./working_directories/book_lambda validate -var book_version=${{ env.BOOK_LAMBDA_SEMVER }} -var book_name=${{ inputs.BOOK_NAME }} -var image_uri=${{ env.IMAGE_URI }}

    - if: inputs.CHECK_BEFORE_APPLY
      shell: bash
      run: terraform -chdir=./working_directories/initial_configuration plan -var book_name=${{ inputs.BOOK_NAME }}
    - if: inputs.CHECK_BEFORE_APPLY
      shell: bash
      run: terraform -chdir=./working_directories/book_lambda plan -var book_version=${{ env.BOOK_LAMBDA_SEMVER }} -var book_name=${{ inputs.BOOK_NAME }} -var image_uri=${{ env.IMAGE_URI }}

    - shell: bash
      run: terraform -chdir=./working_directories/initial_configuration apply -var book_name=${{ inputs.BOOK_NAME }} -auto-approve
    - shell: bash
      run: terraform -chdir=./working_directories/book_lambda apply -var book_version=${{ env.BOOK_LAMBDA_SEMVER }} -var book_name=${{ inputs.BOOK_NAME }} -var image_uri=${{ env.IMAGE_URI }} -auto-approve