name: CI
on:
  push:
    branches: [ main ]

jobs:
  BuildAndPublish:
    runs-on: ubuntu-latest #TODO is this optional?
    steps:
    - name: Checkout Source Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Lint commits, branches, and pull requests
      uses: aschbacd/gitlint-action@v1.2.0
      with:
        re-commit-message-split: "^([^\n]*)(?:\n+([\s\S]*[^\n]))?\n*$"
        re-commit-message-subject: "^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test)(\([\w\-\.]+\))?(!)?: ((?:[\w ])+)"
        re-commit-message-body: "(?:\n+((?:[^#\n]+\n*?)+))??(?:\n+((?:[A-Z][a-z](?:-[a-z]+): (?:[A-Za-z]+ )+<[\w\-\.]+@(?:[\w\-]+\.)+[\w\-]{2,4}>)(?:\n+[A-Z][a-z](?:-[a-z]+): (?:[A-Za-z]+ )+<[\w\-\.]+@(?:[\w\-]+\.)+[\w\-]{2,4}>)))?(?:\n+((?:#.*\n*?)+))?\n*$"
        re-tag-name: "^v?\d+\.\d+\.\d+$"

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
        role-skip-session-tagging: true
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    - name: Login to AWS CodeArtifact
      id: codeartifact
      run: |
        TOKEN=$(aws codeartifact get-authorization-token --domain-owner 719468614044 --domain kognitos --query 'authorizationToken' --output text)
        echo "::set-output name=token::$TOKEN"

    - name: Setup Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: 3.11
    - name: Install Python Poetry
      uses: abatilo/actions-poetry@v2
      with:
        poetry-version: 1.8
    - name: Configure Poetry
      shell: bash
      run: |
        python -m poetry config virtualenvs.in-project true
        python -m poetry config virtualenvs.create true
        python -m poetry config http-basic.bdk aws $(aws codeartifact get-authorization-token --domain-owner 719468614044 --domain kognitos --query 'authorizationToken' --output text)

    - name: Install dependencies
      run: |
        python -m poetry install
    - name: PyLint
      run: |
        python -m poetry run lint
    - name: Type Check
      run: |
        python -m poetry run type-check
    - name: Test
      run: |
        python -m poetry run tests

--------- hasta aca quiero chequear en PRs

    - name: Semantic Release
      id: semantic
      uses: cycjimmy/semantic-release-action@v4
      with:
        branches: |
          main
        extra_plugins: |
          @codedependant/semantic-release-docker
      env:
        CODE_ARTIFACT_TOKEN: ${{ steps.codeartifact.outputs.token }}
        DOCKER_REGISTRY_USER: ${{ steps.login-ecr.outputs.docker_username_719468614044_dkr_ecr_us_west_2_amazonaws_com }}
        DOCKER_REGISTRY_PASSWORD: ${{ steps.login-ecr.outputs.docker_password_719468614044_dkr_ecr_us_west_2_amazonaws_com }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    DeployToDev:
      steps:
      - name: deploy infra and configure it
        uses: ...