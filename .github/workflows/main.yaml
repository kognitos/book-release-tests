name: Main Pipeline
on:
  push:
    branches: [ main, test_changes ]
  pull_request:
    branches: [ main ]


jobs:
  TestJob:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup Credentials
      uses: ./.github/actions/setup_credentials
      id: setup_credentials
      with:
        AWS_ACCOUNT_ID: "719468614044"
        AWS_REGION: "us-west-2"
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        AWS_ROLE_EXTERNAL_ID: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
    - shell: bash
      run: echo "${{ toJSON(steps.setup_credentials.outputs) }}"

  
    # - shell: bash
    #   run: echo '${{ toJSON(secrets) }}'
    # - uses: ./.github/actions/setup_credentials
    #   id: creds
    #   with:
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}
    #     AWS_ROLE_EXTERNAL_ID: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}

    # - run: |
    #     echo ${{ steps.creds.outputs.CODE_ARTIFACT_TOKEN }}
    #     echo ${{ steps.creds.outputs.DOCKER_REGISTRY_USER }}
    #     echo ${{ steps.creds.outputs.DOCKER_REGISTRY_PASSWORD }}

    # - uses: hashicorp/setup-terraform@v3
    #   with:
    #     terraform_wrapper: false

    # - shell: bash
    #   run: terraform -chdir=./test_tf init

    # - shell: bash
    #   id: apply
    #   run: terraform -chdir=./test_tf apply -auto-approve
  
    # - shell: bash
    #   id: output
    #   run: echo "lambda_name=$(terraform -chdir=./test_tf output name)" >> $GITHUB_OUTPUT


  # CheckAndTestCode:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout Source Code
  #     uses: actions/checkout@v4
  #   - name: Setup Credentials
  #     uses: ./.github/actions/setup_credentials
  #     id: setup_credentials
  #     with:
  #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}
  #       AWS_ROLE_EXTERNAL_ID: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
  #   - uses: ./.github/actions/gitlint
  #   - uses: ./.github/actions/check_and_test_code
  #     with:
  #       CODE_ARTIFACT_TOKEN: ${{ steps.setup_credentials.outputs.CODE_ARTIFACT_TOKEN }}

# --------- Up to here I want to check on PRs